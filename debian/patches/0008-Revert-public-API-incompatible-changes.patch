Author: Luca Boccassi <bluca@debian.org>
Forwarded: https://github.com/USNavalResearchLaboratory/norm/pull/23
--- a/include/normApi.h
+++ b/include/normApi.h
@@ -338,9 +338,9 @@
                           UINT16             segmentSize, 
                           UINT16             numData, 
                           UINT16             numParity);
-// non-public on purpose
-//NORM_API_LINKAGE
-//void NormSetId(NormSessionHandle sessionHandle, NormNodeId normId);
+
+NORM_API_LINKAGE
+void NormSetId(NormSessionHandle sessionHandle, NormNodeId normId);
 
 // This does not affect the rx_socket binding if already bound (sender or receiver already started)
 // (i.e., just affects where NORM packets are sent)
--- a/src/common/normApi.cpp
+++ b/src/common/normApi.cpp
@@ -739,8 +739,7 @@
     notify_pool.Destroy();
 }  // end NormInstance::Shutdown()
 
-/*
-This function doesn't make sense?
+// This function doesn't make sense?
 UINT32 NormInstance::CountCompletedObjects(NormSession* session)
 {
 	UINT32 result = 0UL;
@@ -756,7 +755,6 @@
 	}
 	return result;
 } // end NormInstance::CountCompletedObjects()
-*/
 
 //////////////////////////////////////////////////////////////////////////
 // NORM API FUNCTION IMPLEMENTATIONS
@@ -2313,7 +2311,6 @@
 
 
 // This one is not part of the public API (for NormSocket use currently)
-NORM_API_LINKAGE
 bool NormSendCommandTo(NormSessionHandle  sessionHandle,
                        const char*        cmdBuffer, 
                        unsigned int       cmdLength, 
@@ -3064,7 +3061,6 @@
 //         is done so that this current approach is not very costly)
 //
 
-/*
 // Not sure why this function exists.  It just counts the number
 // of RX_OBJECT_COMPLETED events currently in notification queue
 // which is a temporary and transitory thing???
@@ -3081,4 +3077,3 @@
     }
 	return result;
 }  // end NormCountCompletedObjects()
-*/
